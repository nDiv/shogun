{
    "Program": "require 'modshogun'\n\n$dependencies$program",
    "Statement": "$statement\n",
    "Comment": "#$comment\n",
    "Init": {
        "Construct": "$name = Modshogun::$typeName.new $arguments",
        "Copy": "$name = $expr",
        "BoolVector": "auto $name = NArray.byte($arguments)",
        "CharVector": "auto $name = NArray.byte($arguments)",
        "ByteVector": "auto $name = NArray.byte($arguments)",
        "WordVector": "auto $name = NArray.byte($arguments)",
        "IntVector": "auto $name = NArray.sint($arguments)",
        "LongIntVector": "auto $name = NArray.int($arguments)",
        "ULongIntVector": "auto $name = NArray.int($arguments)",
        "ShortRealVector": "auto $name = NArray.sfloat($arguments)",
        "RealVector": "auto $name = NArray.float($arguments)",
        "LongRealVector": "auto $name = NArray.bool($arguments)",
        "LongRealVector": "auto $name = NArray.bool($arguments)",
        "ComplexVector": "auto $name = NArray.scomplex($arguments)",
        "BoolMatrix": "auto $name = NMatrix.bool($arguments)",
        "CharMatrix": "auto $name = NMatrix.float($arguments)",
        "ByteMatrix": "auto $name = NMatrix.byte($arguments)",
        "WordMatrix": "auto $name = NMatrix.byte($arguments)",
        "IntMatrix": "auto $name = NMatrix.sint($arguments)",
        "LongIntMatrix": "auto $name = NMatrix.int($arguments)",
        "ULongIntMatrix": "auto $name = NMatrix.int($arguments)",
        "ShortRealMatrix": "auto $name = NMatrix.sfloat($arguments)",
        "RealMatrix": "auto $name = NMatrix.float($arguments)",
        "LongRealMatrix": "auto $name = NMatrix.float($arguments)",
        "ComplexMatrix": "auto $name = NMatrix.scomplex($arguments)"
    },
    "Assign": "$lhs = $expr",
    "Type": {
        "Default": "$typeName"
    },
    "Expr": {
        "StringLiteral": "\"$literal\"",
        "BoolLiteral": {
            "True": "true",
            "False": "false"
        },
        "NumberLiteral": "$number",
        "MethodCall": "$object.$method $arguments",
        "StaticCall": "Modshogun::$typeName.$method $arguments",
        "Identifier": "$identifier",
        "Enum":"Modshogun::$value"
    },
    "ElementAccess": {
        "Vector": "$identifier[$indices]",
        "Matrix": "$identifier[$indices]",
        "ZeroIndexed": true
    },
    "Print": "puts $expr",
    "OutputDirectoryName": "ruby",
    "FileExtension": ".rb"
}
