{
    "Program": "using System;\n\npublic class classifier_knn_modular {\npublic static void Main() {\nmodshogun.init_shogun_with_defaults();\n\n$program\n}\n}\n",
    "Statement": "$statement;\n",
    "Comment": "//$comment\n",
    "Init": {
        "Construct": "$typeName $name = new $typeName($arguments)",
        "Copy": "$typeName $name = $expr",
        "BoolVector": "var $name = new bool[$arguments]",
        "CharVector": "var $name = new char[$arguments]",
        "ByteVector": "var $name = new byte[$arguments]",
        "WordVector": "var $name = new ushort[$arguments]",
        "IntVector": "var $name = new int[$arguments]",
        "LongIntVector": "var $name = new long[$arguments]",
        "ULongIntVector": "var $name = new ulongint[$arguments]",
        "ShortRealVector": "var $name = new float[$arguments]",
        "RealVector": "var $name = new double[$arguments]",
        "LongRealVector": "var $name = new double[$arguments]",
        "ComplexVector": "var $name = new Complex[$arguments]",
        "BoolMatrix": "var $name = new bool[$arguments]",
        "CharMatrix": "var $name = new char[$arguments]",
        "ByteMatrix": "var $name = new byte[$arguments]",
        "WordMatrix": "var $name = new ushort[$arguments]",
        "IntMatrix": "var $name = new int[$arguments]",
        "LongIntMatrix": "var $name = new long[$arguments]",
        "ULongIntMatrix": "var $name = new ulongint[$arguments]",
        "ShortRealMatrix": "var $name = new float[$arguments]",
        "RealMatrix": "var $name = new double[$arguments]",
        "LongRealMatrix": "var $name = new double[$arguments]",
        "ComplexMatrix": "var $name = new Complex[$arguments]"
    },
    "Assign": "$lhs = $expr",
    "Type": {
        "Default": "$typeName",
        "bool": "bool",
        "string": "String",
        "int": "int",
        "float": "float",
        "real": "double",
        "BoolVector": "bool[]",
        "CharVector": "char[]",
        "ByteVector": "byte[]",
        "WordVector": "ushort[]",
        "ShortVector": "short[]",
        "IntVector": "int[]",
        "LongIntVector": "long[]",
        "ULongIntVector": "ulongint[]",
        "ShortRealVector": "float[]",
        "RealVector": "double[]",
        "LongRealVector": "double[]",
        "ComplexVector": "Complex[]",
        "BoolMatrix": "bool[,]",
        "CharMatrix": "char[,]",
        "ByteMatrix": "byte[,]",
        "WordMatrix": "ushort[,]",
        "ShortMatrix": "short[,]",
        "IntMatrix": "int[,]",
        "LongIntMatrix": "long[,]",
        "ULongIntMatrix": "ulongint[,]",
        "ShortRealMatrix": "float[,]",
        "RealMatrix": "double[,]",
        "LongRealMatrix": "double[,]",
        "ComplexMatrix": "Complex[,]"
    },
    "Expr": {
        "StringLiteral": "\"$literal\"",
        "BoolLiteral": {
            "True": "true",
            "False": "false"
        },
        "NumberLiteral": "$number",
        "MethodCall": "$object.$method($arguments)",
        "StaticCall": "$typeName.$method($arguments)",
        "Identifier": "$identifier",
        "Enum":"$typeName.$value"
    },
    "ElementAccess": {
        "Vector": "$identifier[$indices]",
        "Matrix": "$identifier[$indices]",
        "ZeroIndexed": true
    },
    "Print": "Console.Write($expr)",
    "OutputDirectoryName": "csharp",
    "FileExtension": ".cs"
}
